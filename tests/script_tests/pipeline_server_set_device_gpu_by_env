#!/bin/bash

EXPECTED=2
DEVICE=GPU
# Run server and wait for init to complete
$SOURCE_DIR/docker/run.sh -e DETECTION_DEVICE=$DEVICE -e CLASSIFICATION_DEVICE=$DEVICE --non-interactive &
sleep 5

# Start pipeline and capture instance_id to get pipeline details and check if device updated
INSTANCE_ID=$(curl localhost:8080/pipelines/object_classification/vehicle_attributes -X POST -H \
'Content-Type: application/json' -d \
'{
  "source": {
    "uri": "https://github.com/intel-iot-devkit/sample-videos/blob/master/bottle-detection.mp4?raw=true",
    "type": "uri"
  },
  "destination": {
    "metadata": {
        "type": "file",
        "path": "/tmp/results_emotions.txt",
        "format": "json-lines"
    }
  }
}' | tr -d '"')


RETURN_CODE=$?
OUTPUT=$(curl localhost:8080/pipelines/$INSTANCE_ID | grep $DEVICE | wc -l )

RETURN_CODE=$?


# Stop server
$SOURCE_DIR/tests/stop.sh

if [[ $RETURN_CODE != 0 ]]; then
    error
fi

if [[ ! "$OUTPUT" == "$EXPECTED" ]]; then
    error "Unexpected output"
fi
